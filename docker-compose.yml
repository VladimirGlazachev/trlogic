version: "3"
volumes:
    grafana_data: {}
    prometheus_data: {}
services:
   webapp:
     build: .
     image: vladimir.glazachev/helloworld
     ports:
      - "81:8080"
     healthcheck:
       test: ["CMD", "curl", "-f", "http://127.0.0.1:8080"]
       interval: 30s
       timeout: 2s
       retries: 3
   prometheus:
     build: .
     image: prom/prometheus:v2.1.0
     container_name: prometheus
     volumes:
      - ${PWD}/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
     command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
     restart: unless-stopped
     expose:
      - 9090
     ports:
      - "9090:9090"
     depends_on:
      - nodeexporter
   nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - "9100:9100"
   grafana:
    image: grafana/grafana
    user: "501"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana_data:/var/lib/grafana
    restart: always
